syntax = "proto3";

package policy;

option go_package = "flamo/backend/pkg/api/proto/policy";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";

service PolicyService {
  rpc CreatePolicy(CreatePolicyRequest) returns (CreatePolicyResponse);
  rpc GetPolicy(GetPolicyRequest) returns (GetPolicyResponse);
  rpc UpdatePolicy(UpdatePolicyRequest) returns (UpdatePolicyResponse);
  rpc DeletePolicy(DeletePolicyRequest) returns (DeletePolicyResponse);
  rpc ListPolicies(ListPoliciesRequest) returns (ListPoliciesResponse);
  rpc ActivatePolicy(ActivatePolicyRequest) returns (ActivatePolicyResponse);
  rpc DeactivatePolicy(DeactivatePolicyRequest) returns (DeactivatePolicyResponse);
  rpc ValidatePolicy(ValidatePolicyRequest) returns (ValidatePolicyResponse);
}

service DecisionService {
  rpc Evaluate(EvaluateRequest) returns (EvaluateResponse);
  rpc BatchEvaluate(BatchEvaluateRequest) returns (BatchEvaluateResponse);
  rpc GetDecisionHistory(GetDecisionHistoryRequest) returns (GetDecisionHistoryResponse);
  rpc ClearCache(ClearCacheRequest) returns (ClearCacheResponse);
}

service BundleService {
  rpc CreateBundle(CreateBundleRequest) returns (CreateBundleResponse);
  rpc GetBundle(GetBundleRequest) returns (GetBundleResponse);
  rpc UpdateBundle(UpdateBundleRequest) returns (UpdateBundleResponse);
  rpc DeleteBundle(DeleteBundleRequest) returns (DeleteBundleResponse);
  rpc ListBundles(ListBundlesRequest) returns (ListBundlesResponse);
  rpc DeployBundle(DeployBundleRequest) returns (DeployBundleResponse);
}

service TemplateService {
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse);
  rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);
  rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse);
  rpc InstantiateTemplate(InstantiateTemplateRequest) returns (InstantiateTemplateResponse);
}

enum PolicyType {
  POLICY_TYPE_UNSPECIFIED = 0;
  POLICY_TYPE_ACCESS = 1;
  POLICY_TYPE_MODEL = 2;
  POLICY_TYPE_RATE = 3;
  POLICY_TYPE_COMPLIANCE = 4;
  POLICY_TYPE_CONTENT = 5;
}

enum PolicyStatus {
  POLICY_STATUS_UNSPECIFIED = 0;
  POLICY_STATUS_ACTIVE = 1;
  POLICY_STATUS_INACTIVE = 2;
  POLICY_STATUS_DRAFT = 3;
  POLICY_STATUS_ARCHIVED = 4;
}

enum Effect {
  EFFECT_UNSPECIFIED = 0;
  EFFECT_ALLOW = 1;
  EFFECT_DENY = 2;
}

enum Priority {
  PRIORITY_UNSPECIFIED = 0;
  PRIORITY_LOW = 1;
  PRIORITY_MEDIUM = 5;
  PRIORITY_HIGH = 10;
  PRIORITY_CRITICAL = 15;
}

message Policy {
  string id = 1;
  string tenant_id = 2;
  string name = 3;
  string description = 4;
  PolicyType type = 5;
  PolicyStatus status = 6;
  Priority priority = 7;
  Effect effect = 8;
  string version = 9;
  repeated Rule rules = 10;
  repeated Condition conditions = 11;
  map<string, string> metadata = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
  string created_by = 15;
  string updated_by = 16;
}

message Rule {
  string id = 1;
  string name = 2;
  string description = 3;
  string resource = 4;
  string action = 5;
  Effect effect = 6;
  repeated Condition conditions = 7;
  map<string, string> metadata = 8;
}

message Condition {
  string field = 1;
  string operator = 2;
  google.protobuf.Value value = 3;
  string type = 4;
}

message Permission {
  string id = 1;
  string tenant_id = 2;
  string subject_id = 3;
  string subject_type = 4;
  string resource = 5;
  string action = 6;
  Effect effect = 7;
  map<string, string> constraints = 8;
  google.protobuf.Timestamp expires_at = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  string created_by = 12;
}

message PolicyBundle {
  string id = 1;
  string tenant_id = 2;
  string name = 3;
  string description = 4;
  string version = 5;
  repeated string policies = 6;
  PolicyStatus status = 7;
  map<string, string> metadata = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  string created_by = 11;
  string updated_by = 12;
}

message PolicyDecision {
  bool allow = 1;
  bool deny = 2;
  string reason = 3;
  string policy_id = 4;
  string rule_id = 5;
  map<string, string> metadata = 6;
  google.protobuf.Timestamp timestamp = 7;
  string request_id = 8;
  string tenant_id = 9;
  string subject_id = 10;
  string resource = 11;
  string action = 12;
  map<string, string> context = 13;
}

message PolicyEvaluation {
  string request_id = 1;
  string tenant_id = 2;
  string subject_id = 3;
  string resource = 4;
  string action = 5;
  map<string, string> context = 6;
  map<string, string> input = 7;
  PolicyDecision decision = 8;
  google.protobuf.Duration duration = 9;
  google.protobuf.Timestamp timestamp = 10;
  bool cache_hit = 11;
  int32 policy_count = 12;
}

message PolicyTemplate {
  string id = 1;
  string name = 2;
  string description = 3;
  string category = 4;
  string industry = 5;
  repeated string compliance = 6;
  string template = 7;
  map<string, string> variables = 8;
  string version = 9;
  bool is_public = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  string created_by = 13;
}

message CreatePolicyRequest {
  string tenant_id = 1;
  string name = 2;
  string description = 3;
  PolicyType type = 4;
  Priority priority = 5;
  Effect effect = 6;
  repeated Rule rules = 7;
  repeated Condition conditions = 8;
  map<string, string> metadata = 9;
  string created_by = 10;
}

message CreatePolicyResponse {
  Policy policy = 1;
}

message GetPolicyRequest {
  string id = 1;
  string tenant_id = 2;
}

message GetPolicyResponse {
  Policy policy = 1;
}

message UpdatePolicyRequest {
  string id = 1;
  string tenant_id = 2;
  string name = 3;
  string description = 4;
  Priority priority = 5;
  Effect effect = 6;
  repeated Rule rules = 7;
  repeated Condition conditions = 8;
  map<string, string> metadata = 9;
  string updated_by = 10;
}

message UpdatePolicyResponse {
  Policy policy = 1;
}

message DeletePolicyRequest {
  string id = 1;
  string tenant_id = 2;
}

message DeletePolicyResponse {}

message ListPoliciesRequest {
  string tenant_id = 1;
  PolicyType type = 2;
  PolicyStatus status = 3;
  int32 limit = 4;
  int32 offset = 5;
  string sort_by = 6;
  string sort_order = 7;
}

message ListPoliciesResponse {
  repeated Policy policies = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
  bool has_more = 5;
}

message ActivatePolicyRequest {
  string id = 1;
  string tenant_id = 2;
}

message ActivatePolicyResponse {}

message DeactivatePolicyRequest {
  string id = 1;
  string tenant_id = 2;
}

message DeactivatePolicyResponse {}

message ValidatePolicyRequest {
  Policy policy = 1;
  string tenant_id = 2;
}

message ValidatePolicyResponse {
  bool valid = 1;
  repeated string errors = 2;
  repeated string warnings = 3;
}

message EvaluateRequest {
  string tenant_id = 1;
  string subject_id = 2;
  string resource = 3;
  string action = 4;
  map<string, string> context = 5;
  map<string, string> input = 6;
  string request_id = 7;
}

message EvaluateResponse {
  PolicyDecision decision = 1;
  bool cached = 2;
  google.protobuf.Duration duration = 3;
}

message BatchEvaluateRequest {
  repeated EvaluateRequest requests = 1;
}

message BatchEvaluateResponse {
  repeated EvaluateResponse responses = 1;
  google.protobuf.Duration duration = 2;
}

message GetDecisionHistoryRequest {
  string tenant_id = 1;
  string subject_id = 2;
  string resource = 3;
  string action = 4;
  google.protobuf.Timestamp start_time = 5;
  google.protobuf.Timestamp end_time = 6;
  int32 limit = 7;
  int32 offset = 8;
}

message GetDecisionHistoryResponse {
  repeated PolicyEvaluation evaluations = 1;
  int32 total = 2;
  bool has_more = 3;
}

message ClearCacheRequest {
  string tenant_id = 1;
  string policy_id = 2;
}

message ClearCacheResponse {}

message CreateBundleRequest {
  string tenant_id = 1;
  string name = 2;
  string description = 3;
  repeated string policies = 4;
  map<string, string> metadata = 5;
  string created_by = 6;
}

message CreateBundleResponse {
  PolicyBundle bundle = 1;
}

message GetBundleRequest {
  string id = 1;
  string tenant_id = 2;
}

message GetBundleResponse {
  PolicyBundle bundle = 1;
}

message UpdateBundleRequest {
  string id = 1;
  string tenant_id = 2;
  string name = 3;
  string description = 4;
  repeated string policies = 5;
  map<string, string> metadata = 6;
  string updated_by = 7;
}

message UpdateBundleResponse {
  PolicyBundle bundle = 1;
}

message DeleteBundleRequest {
  string id = 1;
  string tenant_id = 2;
}

message DeleteBundleResponse {}

message ListBundlesRequest {
  string tenant_id = 1;
  PolicyStatus status = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message ListBundlesResponse {
  repeated PolicyBundle bundles = 1;
  int32 total = 2;
  bool has_more = 3;
}

message DeployBundleRequest {
  string id = 1;
  string tenant_id = 2;
  string target = 3;
}

message DeployBundleResponse {}

message CreateTemplateRequest {
  string name = 1;
  string description = 2;
  string category = 3;
  string industry = 4;
  repeated string compliance = 5;
  string template = 6;
  map<string, string> variables = 7;
  bool is_public = 8;
  string created_by = 9;
}

message CreateTemplateResponse {
  PolicyTemplate template = 1;
}

message GetTemplateRequest {
  string id = 1;
}

message GetTemplateResponse {
  PolicyTemplate template = 1;
}

message ListTemplatesRequest {
  string category = 1;
  string industry = 2;
  string compliance = 3;
  bool is_public = 4;
  int32 limit = 5;
  int32 offset = 6;
}

message ListTemplatesResponse {
  repeated PolicyTemplate templates = 1;
  int32 total = 2;
  bool has_more = 3;
}

message InstantiateTemplateRequest {
  string template_id = 1;
  string tenant_id = 2;
  string name = 3;
  map<string, string> variables = 4;
  string created_by = 5;
}

message InstantiateTemplateResponse {
  Policy policy = 1;
}

apiVersion: v1
kind: ConfigMap
metadata:
  name: policy-service-config
  namespace: exoper
  labels:
    app: policy-service
    component: config
    version: v1.0.0
    environment: production
    tier: backend
    managed-by: kubernetes
  annotations:
    config.kubernetes.io/local-config: "true"
    kubernetes.io/description: "Configuration for Exoper Policy Service"
data:
  policy.yaml: |
    server:
      name: "exoper-policy-service"
      version: "1.0.0"
      environment: "production"
      host: "0.0.0.0"
      port: 8080
      grpc_port: 9090
      read_timeout: "60s"
      write_timeout: "60s"
      idle_timeout: "300s"
      shutdown_timeout: "60s"

    security:
      tls:
        enabled: true
        cert_file: "/etc/ssl/certs/policy-service.crt"
        key_file: "/etc/ssl/private/policy-service.key"
        ca_file: "/etc/ssl/certs/ca.crt"
      mtls:
        enabled: true
        client_ca_file: "/etc/ssl/certs/client-ca.crt"
        verify_client_cert: true

    opa:
      url: "https://opa-service.exoper.svc.cluster.local:8181"
      timeout: "45s"
      retry_attempts: 10
      retry_delay: "5s"
      max_retry_delay: "60s"
      health_check_interval: "15s"
      batch_size: 500
      max_concurrency: 500

    database:
      driver: "postgres"
      host: "postgres-service.exoper.svc.cluster.local"
      port: 5432
      name: "exoper_production"
      user: "exoper_policy_prod"
      ssl_mode: "require"
      max_open_conns: 200
      max_idle_conns: 50
      conn_max_lifetime: "30m"

    cache:
      default_ttl: "30m"
      allow_policy_ttl: "60m"
      max_entries: 500000
      cleanup_interval: "5m"
      eviction_policy: "lru"

    policy_engine:
      rate_limit:
        requests_per_second: 50000
        burst_size: 500000
      circuit_breaker:
        max_requests: 1000
        interval: "120s"
        timeout: "300s"
        failure_threshold: 0.3
        success_threshold: 20
      evaluation:
        default_timeout: "30s"
        batch_max_size: 500
        explain_enabled: false
        trace_enabled: false

    policy_storage:
      bundle_path: "/app/policies"
      sync_interval: "1m"
      batch_size: 500
      max_policies_per_tenant: 50000
      validation_timeout: "30s"

    decision_engine:
      cache_policies: ["allow", "deny", "force_refresh"]
      warmup_enabled: true
      warmup_batch_size: 1000
      warmup_subject: "prod_warmup_subject"
      metrics_enabled: true

    observability:
      logging:
        level: "warn"
        format: "json"
        output: "stdout"
      tracing:
        enabled: true
        service_name: "exoper-policy-service-k8s"
        jaeger:
          endpoint: "http://jaeger-collector.observability.svc.cluster.local:14268/api/traces"
      metrics:
        enabled: true
        prometheus:
          enabled: true
          path: "/metrics"
          port: 8085

    bundle_management:
      max_policies_per_bundle: 2000
      deployment_timeout: "30m"
      supported_targets: ["opa", "database"]
      auto_deploy: false
      validation_enabled: true

    condition_evaluation:
      supported_operators: ["==", "!=", "in", "not_in", "contains", "starts_with", "ends_with"]
      pattern_matching_enabled: true
      case_sensitive: true
      timeout: "5s"

    cache_management:
      warmup_enabled: true
      warmup_batch_size: 1000
      warmup_subject: "k8s_warmup_subject"
      clear_pattern_support: true
      hit_rate_threshold: 0.95

    validation:
      max_name_length: 255
      max_policies_per_bundle: 2000
      default_page_size: 200
      max_page_size: 5000
      supported_cache_policies: ["allow", "deny", "force_refresh"]
      max_batch_size: 500
      max_query_timeout: "1m"

    rate_limiting:
      enabled: true
      policy_operations:
        requests_per_minute: 50000
        burst: 500000
      decision_evaluations:
        requests_per_minute: 200000
        burst: 2000000
      batch_evaluations:
        requests_per_minute: 5000
        burst: 50000

    health_check:
      enabled: true
      path: "/health"
      interval: "15s"
      timeout: "30s"
      component_timeouts:
        policy_store: "20s"
        bundle_manager: "20s"
        opa_engine: "10s"
        opa_client: "20s"
        cache: "5s"
        database: "20s"

    middleware:
      logging:
        enabled: true
        log_request_body: false
        log_response_body: false
      recovery:
        enabled: true
        include_stack_trace: false
      security:
        enabled: true
        headers:
          x_frame_options: "DENY"
          x_content_type_options: "nosniff"
          x_xss_protection: "1; mode=block"
          strict_transport_security: "max-age=63072000; includeSubDomains; preload"
          content_security_policy: "default-src 'none'; script-src 'self'; style-src 'self'; img-src 'self'"
          referrer_policy: "strict-origin-when-cross-origin"
      cors:
        enabled: true
        allowed_origins: ["https://app.exoper.com", "https://admin.exoper.com"]
        allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
        allowed_headers: ["Content-Type", "Authorization", "X-Tenant-ID", "X-Request-ID", "X-Trace-ID"]
        allow_credentials: true
        max_age: 86400

    operations:
      circuit_breaker_reset_enabled: false
      cache_warmup_enabled: true
      selective_cache_clear_enabled: true
      debug_mode_enabled: false
      pprof_enabled: false
      graceful_shutdown_enabled: true

    session:
      store_type: "redis"
      redis_url: "redis://redis-service.exoper.svc.cluster.local:6379"
      cookie_name: "exoper_policy_session"
      cookie_domain: "exoper.com"
      cookie_secure: true
      cookie_http_only: true
      cookie_same_site: "strict"
      max_age: 28800

    redis:
      enabled: true
      host: "redis-service.exoper.svc.cluster.local"
      port: 6379
      db: 0
      pool_size: 100
      session_prefix: "policy:session:"
      cache_prefix: "policy:cache:"

    monitoring:
      alerts:
        enabled: true
        error_rate_threshold: 0.01
        latency_threshold: "500ms"
        availability_threshold: 0.999
      dashboards:
        enabled: true
        grafana_url: "http://grafana.observability.svc.cluster.local"
      log_aggregation:
        enabled: true
        elasticsearch_url: "http://elasticsearch.observability.svc.cluster.local:9200"

    high_availability:
      enabled: true
      cluster_size: 3
      load_balancer:
        enabled: true
        algorithm: "round_robin"
        health_check_path: "/health"
      failover:
        enabled: true
        timeout: "30s"
        retry_attempts: 5

    backup:
      enabled: true
      schedule: "0 2 * * *"
      retention_days: 30
      storage_type: "s3"
      s3_bucket: "exoper-policy-backups-k8s"
      encryption_enabled: true

    compliance:
      audit_logging: true
      data_retention_days: 2555
      gdpr_compliance: true
      encryption_at_rest: true
      encryption_in_transit: true

  app.env: |
    ENVIRONMENT=production
    SERVICE_NAME=exoper-policy-service
    SERVICE_VERSION=1.0.0
    LOG_LEVEL=warn
    METRICS_ENABLED=true
    TRACING_ENABLED=true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: policy-service-scripts
  namespace: exoper
  labels:
    app: policy-service
    component: scripts
    version: v1.0.0
    environment: production
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e
    echo "Starting Exoper Policy Service..."
    echo "Environment: $ENVIRONMENT"
    echo "Service Version: $SERVICE_VERSION"
    exec /app/policy-service --config=/etc/config/policy.yaml
  
  health-check.sh: |
    #!/bin/bash
    curl -f http://localhost:8080/health || exit 1
  
  prestart.sh: |
    #!/bin/bash
    echo "Running pre-start checks..."
    echo "Checking configuration..."
    /app/policy-service --config=/etc/config/policy.yaml --validate-config
    echo "Pre-start checks completed successfully"

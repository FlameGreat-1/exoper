# Local Development Environment - API Gateway Configuration
server:
  name: "exoper-gateway"
  version: "1.0.0"
  environment: "local"
  host: "0.0.0.0"
  port: 8080
  grpc_port: 9090
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"
  shutdown_timeout: "30s"
  max_header_bytes: 1048576

security:
  tls:
    enabled: false
    cert_file: ""
    key_file: ""
    ca_file: ""
  mtls:
    enabled: false
    client_ca_file: ""
    verify_client_cert: false
  cors:
    enabled: true
    allowed_origins: ["http://localhost:3000", "http://127.0.0.1:3000"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["*"]
    allow_credentials: true
    max_age: 86400

auth:
  jwt:
    secret_key: "dev-secret-key-change-in-production"
    issuer: "exoper-gateway-local"
    audience: "exoper-platform"
    expiry: "24h"
    refresh_expiry: "168h"
  oidc:
    enabled: false
    provider_url: ""
    client_id: ""
    client_secret: ""
    redirect_url: "http://localhost:8080/auth/callback"

database:
  driver: "postgres"
  host: "localhost"
  port: 5432
  name: "exoper_local"
  user: "exoper_user"
  password: "exoper_pass"
  ssl_mode: "disable"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: "5m"
  conn_max_idle_time: "5m"

redis:
  enabled: true
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: "5s"
  read_timeout: "3s"
  write_timeout: "3s"

observability:
  logging:
    level: "debug"
    format: "json"
    output: "stdout"
    file_path: ""
    max_size: 100
    max_backups: 3
    max_age: 28
    compress: true
  tracing:
    enabled: true
    service_name: "exoper-gateway"
    jaeger:
      endpoint: "http://localhost:14268/api/traces"
      sampler_type: "const"
      sampler_param: 1.0
  metrics:
    enabled: true
    prometheus:
      enabled: true
      path: "/metrics"
      port: 8081
    custom_metrics:
      request_duration: true
      request_count: true
      error_rate: true

rate_limiting:
  enabled: true
  global:
    requests_per_second: 1000
    burst: 2000
  # per_tenant:  # Commented out - tenant service not implemented yet
  #   requests_per_second: 100
  #   burst: 200
  per_ip:
    requests_per_second: 50
    burst: 100

services:
  auth_service:
    host: "localhost"
    port: 8081
    grpc_port: 9091
    timeout: "10s"
    retry_attempts: 3
    circuit_breaker:
      enabled: true
      max_requests: 100
      interval: "60s"
      timeout: "30s"
  
  # tenant_service:  # Commented out - not implemented yet
  #   host: "localhost"
  #   port: 8082
  #   grpc_port: 9092
  #   timeout: "10s"
  #   retry_attempts: 3
  #   circuit_breaker:
  #     enabled: true
  #     max_requests: 100
  #     interval: "60s"
  #     timeout: "30s"

  # threat_detector:  # Commented out - not implemented yet
  #   host: "localhost"
  #   port: 8083
  #   grpc_port: 9093
  #   timeout: "5s"
  #   retry_attempts: 2
  #   circuit_breaker:
  #     enabled: true
  #     max_requests: 200
  #     interval: "30s"
  #     timeout: "10s"

audit:
  enabled: true
  storage_type: "database"
  batch_size: 100
  flush_interval: "10s"
  retention_days: 90
  encryption:
    enabled: false
    key: ""

health_check:
  enabled: true
  path: "/health"
  interval: "30s"
  timeout: "10s"
  dependencies:
    - "database"
    - "redis"
    - "auth_service"
    # - "tenant_service"  # Commented out - not implemented yet
